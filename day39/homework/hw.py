# range() გამოყენება – აბრუნებს რიცხვების მიმდევრობას
print("range(start, end, step) მაგალითები:")

# იწყება 0-დან, მთავრდება 10-მდე (10 არ შედის), იზრდება 2-ით
print(list(range(0, 10, 2)))   # → [0, 2, 4, 6, 8]

# იწყება 1-დან, მთავრდება 6-მდე, ნაგულისხმევი ნაბიჯით 1
print(list(range(1, 6)))       # → [1, 2, 3, 4, 5]

# იწყება 10-დან, მთავრდება 0-მდე, კლებადობით ნაბიჯი -3
print(list(range(10, 0, -3)))  # → [10, 7, 4, 1]

print("\nსიის სლაისინგი იგივე ლოგიკით:")

# ვქმნით სიას რიცხვებით 0-დან 9-მდე
my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# [start:end:step] - იღებს ელემენტებს 0-დან 10-მდე (არა ჩათვლით), ყოველ მეორე ელემენტს
print(my_list[0:10:2])   # → [0, 2, 4, 6, 8]

# იღებს ელემენტებს 1-დან 6-მდე (არა ჩათვლით), ნაგულისხმევი ნაბიჯით 1
print(my_list[1:6])      # → [1, 2, 3, 4, 5]

# იწყება ბოლო ელემენტიდან (index 10 არ არსებობს, ამიტომ იწყებს 9-დან), კლებადობით -3
print(my_list[10:0:-3])  # → [9, 6, 3]

print("\nშედარებისთვის ორივე ფუნქცია იყენებს იგივე არგუმენტებს: start, end (არა ჩათვლით), step")
